namespace demo.ingest_synonym.conditional_set.example_25
version "${project.version}"

/*
Example 25:
Conditional mapping using "set" with a "when" clause that is predicated on the value of a xml element at the specified
xml path conditioned when it finds 2 conditions for rosetta attribute usEngineVersion and ukEngineSpecification
respectively:
-"fuelSpecs->combustibleref->href" = "US" or "fuelSpecs->combustibleref->href" = "UK".
-"combustible" set when "combustible->id" = "US" or "combustible" set when "combustible->id" = "UK" 
*/
synonym source CONDITIONAL_SET_EXAMPLE_25

type Root:
    [rootType]
	engineSpecification EngineSpecification (0..1)
		[synonym CONDITIONAL_SET_EXAMPLE_25 value "engineType"]

type EngineSpecification:
    usEngineVersion EngineVersion (0..1)
        [synonym CONDITIONAL_SET_EXAMPLE_25 value "fuelSpecs" set when "fuel->combustibleref->href" = "US"]
        [synonym CONDITIONAL_SET_EXAMPLE_25 value "combustible" set when "combustible->id" = "US"]
    ukEngineSpecification EngineVersion (0..1)
        [synonym CONDITIONAL_SET_EXAMPLE_25 value "fuelSpecs" set when "fuelSpecs->combustibleref->href" = "UK"]
        [synonym CONDITIONAL_SET_EXAMPLE_25 value "combustible" set when "combustible->id" = "UK"]

type EngineVersion:
    fuelType string (0..1)
        [synonym CONDITIONAL_SET_EXAMPLE_25 value "combustibleId"]
    capacityUnit string (0..1)
        [synonym CONDITIONAL_SET_EXAMPLE_25 value "capacityUnitId"]

/*
Schema:

<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="dataDocument">
        <xs:complexType>
            <xs:all>
                <xs:element name="engineType">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="combustible" maxOccurs="unbounded" minOccurs="0">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element type="xs:string" name="combustibleId"/>
                                    </xs:sequence>
                                    <xs:attribute type="xs:string" name="id" use="optional"/>
                                </xs:complexType>
                            </xs:element>
                            <xs:element name="fuelSpecs" maxOccurs="unbounded" minOccurs="0">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="combustibleref">
                                            <xs:complexType>
                                                <xs:simpleContent>
                                                    <xs:extension base="xs:string">
                                                        <xs:attribute type="xs:string" name="href" use="optional"/>
                                                    </xs:extension>
                                                </xs:simpleContent>
                                            </xs:complexType>
                                        </xs:element>
                                        <xs:element type="xs:string" name="capacityUnitId"/>
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:all>
        </xs:complexType>
    </xs:element>
</xs:schema>
*/