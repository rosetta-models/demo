namespace demo.translate.conditional_set.example_8
version "${project.version}"

/*
Example 8: tes 
Conditional mapping using "set" with a "when" clause that is predicated on the value of a xml element at the specified
xml path

The attribute EngineSpecification->volume->volumeUnit->volumeDetails is conditionally set from xml path
engineType->engineDetail when the value at xml path engineType->engineDetail->combustible = "Petrol".
*/
synonym source CONDITIONAL_SET_EXAMPLE_8

type Root:
    [rootType]
	engineSpecification EngineSpecification (0..1)
	    [synonym CONDITIONAL_SET_EXAMPLE_8 value "engineType"]

type EngineSpecification:
	volume Volume (0..1)
	    [synonym CONDITIONAL_SET_EXAMPLE_8 value "engineDetail" set when "combustible" = "Petrol"]
	fuelType string (0..1)
	    [synonym CONDITIONAL_SET_EXAMPLE_8 value "UK Gallon"]

type Volume:
	volumeUnit VolumeUnit (0..1)
	    [synonym CONDITIONAL_SET_EXAMPLE_8 value "capacity"]

type VolumeUnit:
	volumeDetails string (0..1)
    	[synonym CONDITIONAL_SET_EXAMPLE_8 value "capacityUnit"]

/*
Schema:

<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="dataDocument">
        <xs:complexType>
            <xs:all>
                <xs:element name="engineType">
                    <xs:complexType>
                        <xs:all>
                            <xs:element name="engineDetail">
                                <xs:complexType>
                                    <xs:all>
                                        <xs:element name="capacity">
                                            <xs:complexType>
                                                <xs:all>
                                                    <xs:element name="capacityUnit" type="xs:string"/>
                                                </xs:all>
                                            </xs:complexType>
                                        </xs:element>
                                    </xs:all>
                                </xs:complexType>
                            </xs:element>
                            <xs:element name="combustible" type="xs:string"/>
                        </xs:all>
                    </xs:complexType>
                </xs:element>
            </xs:all>
        </xs:complexType>
    </xs:element>
</xs:schema>
*/