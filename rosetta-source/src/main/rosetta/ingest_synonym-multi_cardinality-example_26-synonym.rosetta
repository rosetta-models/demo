namespace demo.ingest_synonym.multi_cardinality.example_26
version "${project.version}"

/*
Example 26:
Map list of basic types to nested list of basic types to volume multi-cardinality gap in rosetta
*/
synonym source MULTI_CARDINALITY_EXAMPLE_26

type Root:
    [rootType]
    engineSpecification EngineSpecification (1..1)
        [synonym MULTI_CARDINALITY_EXAMPLE_26 value "engineType"]

type EngineSpecification:
	volume Volume (0..*)
        [synonym MULTI_CARDINALITY_EXAMPLE_26 value "engineDetail"]
        [synonym MULTI_CARDINALITY_EXAMPLE_26  value "fuelDetail", "capacityDetail"]

type Volume:
	fuelType string (1..1)
	    [synonym MULTI_CARDINALITY_EXAMPLE_26 value "combustible"]
	volumeUnit string (1..1)
	    [synonym MULTI_CARDINALITY_EXAMPLE_26 value "capacityUnit"]

/*
Schema:

<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="dataDocument">
        <xs:complexType>
            <xs:all>
                <xs:element name="engineType">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="engineDetail" type="EngineDetail" minOccurs="0" maxOccurs="unbounded"/>
                            <xs:element name="fuelDetail" type="FuelDetail" minOccurs="0" maxOccurs="unbounded"/>
                            <xs:element name="capacityDetail" type="CapacityDetail" minOccurs="0"
                                        maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:all>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="EngineDetail">
        <xs:all>
            <xs:element name="combustible" type="xs:string" minOccurs="0"/>
            <xs:element name="capacityUnit" minOccurs="0" type="xs:string"/>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="FuelDetail">
        <xs:all>
            <xs:element name="combustible" type="xs:string"/>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="CapacityDetail">
        <xs:all>
            <xs:element name="capacityUnit" type="xs:string"/>
        </xs:all>
    </xs:complexType>
</xs:schema>
*/