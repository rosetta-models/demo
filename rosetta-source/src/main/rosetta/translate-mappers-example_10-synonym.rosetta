namespace demo.translate.mappers.example_10
version "${project.version}"

/*
 * Example 10:

 * Mapper updates fields on multi-cardinality basic type with metadata scheme.
 */
synonym source MAPPERS_EXAMPLE_10

type Root:
    [rootType]
    engineSpecification EngineSpecification (1..1)
        [synonym MAPPERS_EXAMPLE_10 value "engineType"]

type EngineSpecification:
    emissions string (1..1)
        [synonym MAPPERS_EXAMPLE_10 value "emissions" path "engineDetail->metric"]
    fuelType string (0..*)
        [metadata scheme]
        // value set by synonym
        // scheme updated by mapper
        [synonym MAPPERS_EXAMPLE_10 value "combustible" path "engineDetail->metric" mapper "Example10"]
/*
 * Schema:

 * <?xml version="1.0" encoding="UTF-8"?>
 * <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
 *     <xs:element name="dataDocument">
 *         <xs:complexType>
 *             <xs:sequence>
 *                 <xs:element name="engineType">
 *                     <xs:complexType>
 *                         <xs:sequence>
 *                             <xs:element name="engineDetail">
 *                                 <xs:complexType>
 *                                     <xs:sequence>
 *                                         <xs:element name="metric">
 *                                             <xs:complexType>
 *                                                 <xs:sequence>
 *                                                     <xs:element type="xs:string" name="emissions"/>
 *                                                     <xs:element type="xs:string" name="combustible"
 *                                                                 maxOccurs="unbounded" minOccurs="0"/>
 *                                                 </xs:sequence>
 *                                             </xs:complexType>
 *                                         </xs:element>
 *                                     </xs:sequence>
 *                                 </xs:complexType>
 *                             </xs:element>
 *                         </xs:sequence>
 *                     </xs:complexType>
 *                 </xs:element>
 *             </xs:sequence>
 *         </xs:complexType>
 *     </xs:element>
 * </xs:schema>
 */
