namespace demo.ingest_synonym.conditional_set_to.example_11
version "${project.version}"

/*
Example 11:
The rosetta element fuelType is conditional set to "Gasoline" when xml attribute "type"  or "RegularGasoline" when
path = "combustible->octanes"
and element alternativeFuelType set to "PremiumGasoline" when "combustible->octanes" = "93"
*/
synonym source CONDITIONAL_SET_TO_EXAMPLE_11

type Root:
    [rootType]
    engineSpecification EngineSpecification (1..*)
        [synonym CONDITIONAL_SET_TO_EXAMPLE_11 value "fuelDetail" path "engineType->engineDetail"]

type EngineSpecification:
    engineMetric EngineMetric (1..*)

type EngineMetric:
    fuelType string (1..1)
        [synonym CONDITIONAL_SET_TO_EXAMPLE_11 set to "Combustible" when path = "type"]
        [synonym CONDITIONAL_SET_TO_EXAMPLE_11 set to "RegularGasoline" when path = "combustible->octanes"]
    alternativeFuelType string (1..1)
        [synonym CONDITIONAL_SET_TO_EXAMPLE_11 value "type"]
        [synonym CONDITIONAL_SET_TO_EXAMPLE_11 set to "PremiumGasoline" when "combustible->octanes" = "93"]

/*
Schema:

<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="dataDocument">
        <xs:complexType>
            <xs:all>
                <xs:element name="engineType">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="engineDetail">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="fuelDetail" minOccurs="0" maxOccurs="unbounded">
                                            <xs:complexType>
                                                <xs:sequence>
                                                    <xs:element name="combustible" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:complexType>
                                                            <xs:attribute type="xs:string" name="octanes"
                                                                          use="optional"/>
                                                        </xs:complexType>
                                                    </xs:element>
                                                    <xs:element name="dieselType" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:complexType>
                                                            <xs:attribute type="xs:string" name="usage" use="optional"/>
                                                            <xs:attribute type="xs:string" name="Typ" use="optional"/>
                                                        </xs:complexType>
                                                    </xs:element>
                                                </xs:sequence>
                                                <xs:attribute type="xs:string" name="type"/>
                                            </xs:complexType>
                                        </xs:element>
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:all>
        </xs:complexType>
    </xs:element>
</xs:schema>
*/