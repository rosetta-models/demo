namespace demo.translate.conditional_set.example_9
version "${project.version}"

/*
 * Example 9:
 * Conditional mapping using "set" with a "when" clause that is predicated on the value of a xml element at the specified
 * xml path with multi-cardinality
 * The attribute Engine->engineSpecification->engineMetric->fuel is conditionally set from xml path
 * engineType->engineDetail in engineSpecification type when the value at xml path engineType->engineDetail->
 * engineCategory = "Combustion".
 */
synonym source CONDITIONAL_SET_EXAMPLE_9

type Root:
    [rootType]
    engine Engine (1..1)
        [synonym CONDITIONAL_SET_EXAMPLE_9 value "engineType"]

type Engine:
    engineSpecification EngineSpecification (0..*)
        [synonym CONDITIONAL_SET_EXAMPLE_9 value "engineDetail" set when "engineCategory" = "Combustion"]
    energyCategory string (0..1)
        [synonym CONDITIONAL_SET_EXAMPLE_9 value "engineCategory"]

type EngineSpecification:
    engineMetric EngineMetric (0..1)
        [synonym CONDITIONAL_SET_EXAMPLE_9 value "combustible"]

type EngineMetric:
    fuelType string (0..1)
        [synonym CONDITIONAL_SET_EXAMPLE_9 value "combustibleType"]
/*
 * Schema:

 * <?xml version="1.0" encoding="UTF-8"?>
 * <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
 *     <xs:element name="dataDocument">
 *         <xs:complexType>
 *             <xs:all>
 *                 <xs:element name="engineType">
 *                     <xs:complexType>
 *                         <xs:sequence>
 *                             <xs:element name="engineDetail" maxOccurs="unbounded">
 *                                 <xs:complexType>
 *                                     <xs:sequence>
 *                                         <xs:element name="combustible">
 *                                             <xs:complexType>
 *                                                 <xs:sequence>
 *                                                     <xs:element name="combustibleType" type="xs:string"/>
 *                                                 </xs:sequence>
 *                                             </xs:complexType>
 *                                         </xs:element>
 *                                     </xs:sequence>
 *                                 </xs:complexType>
 *                             </xs:element>
 *                             <xs:element name="engineCategory" type="xs:string"/>
 *                         </xs:sequence>
 *                     </xs:complexType>
 *                 </xs:element>
 *             </xs:all>
 *         </xs:complexType>
 *     </xs:element>
 * </xs:schema>
 */
