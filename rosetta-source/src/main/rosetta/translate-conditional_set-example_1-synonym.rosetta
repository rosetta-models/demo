namespace demo.translate.conditional_set.example_1
version "${project.version}"

/*
 * Example 1:

 * Conditional mapping using "set" with a "when" clause that is predicated on the value of a xml element at the specified
 * xml path.

 * The attribute EngineSpecification->capacityUnit is conditionally set from xml path engine->engineType->engineDetail->
 * volumeCapacityUnit when the value at xml path The attribute EngineSpecification->capacityUnit is conditionally set from
 * xml path engine->engineType->engineDetail->volumeCapacityUnit when the value at xml path engineType->engineDetail->
 * powerUnit = "Cylinder".
 */
synonym source CONDITIONAL_SET_EXAMPLE_1

type Root:
    [rootType]
    engineSpecification EngineSpecification (1..1)
        [synonym CONDITIONAL_SET_EXAMPLE_1 value "engine"]

type EngineSpecification:
    fuelType string (1..1)
        [synonym CONDITIONAL_SET_EXAMPLE_1 value "combustible" path "engineType->engineDetail"]
    capacityUnit string (0..1)
        [synonym CONDITIONAL_SET_EXAMPLE_1 value "volumeCapacityUnit" path "engineType->engineDetail" set when "engineType->engineDetail->powerUnit" = "Cylinder"]
/*
 * Schema:

 * <?xml version="1.0" encoding="UTF-8"?>
 * <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
 *     <xs:element name="dataDocument">
 *         <xs:complexType>
 *             <xs:all>
 *                 <xs:element name="engine">
 *                     <xs:complexType>
 *                         <xs:all>
 *                             <xs:element name="engineType">
 *                                 <xs:complexType>
 *                                     <xs:all>
 *                                         <xs:element name="engineDetail">
 *                                             <xs:complexType>
 *                                                 <xs:all>
 *                                                     <xs:element name="powerUnit" type="xs:string" minOccurs="0"/>
 *                                                     <xs:element name="volumeCapacityUnit" type="xs:string"
 *                                                                 minOccurs="0"/>
 *                                                     <xs:element name="combustible" type="xs:string" minOccurs="0"/>
 *                                                 </xs:all>
 *                                             </xs:complexType>
 *                                         </xs:element>
 *                                     </xs:all>
 *                                 </xs:complexType>
 *                             </xs:element>
 *                         </xs:all>
 *                     </xs:complexType>
 *                 </xs:element>
 *             </xs:all>
 *         </xs:complexType>
 *     </xs:element>
 * </xs:schema>
 */
