namespace demo.translate.conditional_set_to.example_9
version "${project.version}"

/*
 * Example 9:
 * The rosetta element engineEnum is conditional set to "Combustion" or "Hybrid" value from the EngineEnum when xml
 * element "engineDetail->primaryFuel" or "engineDetail->alternativeCombustible" exists respectively
 */
synonym source CONDITIONAL_SET_TO_EXAMPLE_9

type Root:
    [rootType]
    engine Engine (1..1)
        [synonym CONDITIONAL_SET_TO_EXAMPLE_9 value "fuelDetail" path "engineType->engineDetail" , "alternativeFuel" path "engineType->engineDetail"]

type Engine:
    engineSpecification EngineSpecification (0..1)

type EngineSpecification:
    fuel string (1..1)
        [synonym CONDITIONAL_SET_TO_EXAMPLE_9 value "combustible"]
    engineEnum EngineEnum (1..1)
        [synonym CONDITIONAL_SET_TO_EXAMPLE_9 set to EngineEnum -> Combustion when path = "fuelDetail"]
        [synonym CONDITIONAL_SET_TO_EXAMPLE_9 set to EngineEnum -> Hybrid when path = "alternativeFuel"]

enum EngineEnum:
    Hybrid
    Combustion
        /*
         * Schema:

         * <?xml version="1.0" encoding="UTF-8"?>
         * <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
         *     <xs:element name="dataDocument">
         *         <xs:complexType>
         *             <xs:all>
         *                 <xs:element name="engineType">
         *                     <xs:complexType>
         *                         <xs:all>
         *                             <xs:element name="engineDetail">
         *                                 <xs:complexType>
         *                                     <xs:sequence>
         *                                         <xs:element name="fuelDetail" type="FuelReference"/>
         *                                         <xs:element name="alternativeFuel" type="FuelReference"/>
         *                                     </xs:sequence>
         *                                     <xs:attribute name="id" type="xs:string"/>
         *                                 </xs:complexType>
         *                             </xs:element>
         *                         </xs:all>
         *                     </xs:complexType>
         *                 </xs:element>
         *             </xs:all>
         *         </xs:complexType>
         *     </xs:element>
         *     <xs:complexType name="FuelReference">
         *         <xs:all>
         *             <xs:element name="combustible" type="xs:string"/>
         *         </xs:all>
         *         <xs:attribute name="id" type="xs:string"/>
         *     </xs:complexType>
         * </xs:schema>
         */
