namespace demo.translate.conditional_set_to.example_1
version "${project.version}"

/*
 * Example 1:
 * The rosetta element engineSystem is conditional set to "Hybrid" when xml element found in "engineType->engineDetail->
 * fuelDetail->alternativeCombustible" exists
 */
synonym source CONDITIONAL_SET_TO_EXAMPLE_1

type Root:
    [rootType]
    engine Engine (1..1)
        [synonym CONDITIONAL_SET_TO_EXAMPLE_1 value "engineType"]

type Engine:
    engineSpecification EngineSpecification (1..1)
        [synonym CONDITIONAL_SET_TO_EXAMPLE_1 value "engineDetail"]
    engineSystem string (1..1)
        [synonym CONDITIONAL_SET_TO_EXAMPLE_1 set to "Hybrid" when "engineDetail->fuelDetail->alternativeCombustible" exists]

type EngineSpecification:
    engineMetric EngineMetric (1..1)
        [synonym CONDITIONAL_SET_TO_EXAMPLE_1 value "fuelDetail"]

type EngineMetric:
    fuelType string (1..1)
        [synonym CONDITIONAL_SET_TO_EXAMPLE_1 value "combustible"]
/*
 * Schema:

 * <?xml version="1.0" encoding="UTF-8"?>
 * <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
 *     <xs:element name="dataDocument">
 *         <xs:complexType>
 *             <xs:all>
 *                 <xs:element name="engineType">
 *                     <xs:complexType>
 *                         <xs:all>
 *                             <xs:element name="engineDetail">
 *                                 <xs:complexType>
 *                                     <xs:all>
 *                                         <xs:element name="fuelDetail">
 *                                             <xs:complexType>
 *                                                 <xs:all>
 *                                                     <xs:element name="combustible" type="xs:string" minOccurs="0"/>
 *                                                     <xs:element name="alternativeCombustible" type="xs:string"
 *                                                                 minOccurs="0"/>
 *                                                     <xs:element name="properties" type="xs:string" minOccurs="0"/>
 *                                                 </xs:all>
 *                                             </xs:complexType>
 *                                         </xs:element>
 *                                     </xs:all>
 *                                 </xs:complexType>
 *                             </xs:element>
 *                         </xs:all>
 *                     </xs:complexType>
 *                 </xs:element>
 *             </xs:all>
 *         </xs:complexType>
 *     </xs:element>
 * </xs:schema>
 */
