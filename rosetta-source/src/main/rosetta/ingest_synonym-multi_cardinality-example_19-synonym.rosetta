namespace demo.ingest_synonym.multi_cardinality.example_19
version "${project.version}"

/*
Example 19:
Map list of basic types to nested list of basic types using path with multiple globalVersion engineSpecification
engineMetric and volume.
*/
synonym source MULTI_CARDINALITY_EXAMPLE_19

type Root:
    [rootType]
    engine Engine (1..1)
	    [synonym MULTI_CARDINALITY_EXAMPLE_19 value "engineType"]

type Engine:
	globalVersion EngineVersion (0..*)

type EngineVersion:
	engineSpecification EngineSpecification (0..*)
	    [synonym MULTI_CARDINALITY_EXAMPLE_19 value "fuelDetail", "capacityDetail"]

type EngineSpecification:
	engineMetric EngineMetric (0..*)

type EngineMetric:
	volume Volume (0..*)

type Volume:
	fuel string (0..1)
	    [synonym MULTI_CARDINALITY_EXAMPLE_19 value "combustible"]
	capacity string (0..1)
	    [synonym MULTI_CARDINALITY_EXAMPLE_19 value "capacity"]

/*
Schema:

<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="dataDocument">
        <xs:complexType>
            <xs:all>
                <xs:element name="engineType">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="fuelDetail" maxOccurs="unbounded">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="combustible" type="xs:string"/>
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
                            <xs:element name="capacityDetail" maxOccurs="unbounded">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="capacity" type="xs:string"/>
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:all>
        </xs:complexType>
    </xs:element>
</xs:schema>
*/