namespace demo.ingest_synonym.conditional_set.example_16
version "${project.version}"

/*
Example 16:
Conditional mapping using "set" with a "when" clause that is predicated on the value of a xml element at the specified
xml path and rosettaPath with multi-cardinality and meta.
The attribute EngineSpecification->fuel->fuelType is conditional set from xml path engineType->engineDetail->combustible
when
"engineDetail->combustible->scheme"="petrolScheme" in xml and Root->engineSpecification->fuel->fuelType in rosettaPath 
*/
synonym source CONDITIONAL_SET_EXAMPLE_16

type Root:
    [rootType]
	engineSpecification EngineSpecification (1..1)
	    [synonym CONDITIONAL_SET_EXAMPLE_16 value "engineType"]

type EngineSpecification:
	fuel Fuel (1..*)

type Fuel:
	fuelType string (1..1)
	    [metadata scheme]
	    [synonym CONDITIONAL_SET_EXAMPLE_16 value "combustible" path "engineDetail" set when "engineDetail->combustible->scheme"="petrolScheme" and rosettaPath = Root->engineSpecification->fuel->fuelType meta "scheme"]
/*
Schema:

<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="dataDocument">
        <xs:complexType>
            <xs:all>
                <xs:element name="engineType">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="engineDetail" maxOccurs="unbounded">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="combustible">
                                            <xs:complexType>
                                                <xs:simpleContent>
                                                    <xs:extension base="xs:string">
                                                        <xs:attribute name="scheme" type="xs:string"/>
                                                    </xs:extension>
                                                </xs:simpleContent>
                                            </xs:complexType>
                                        </xs:element>
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:all>
        </xs:complexType>
    </xs:element>
</xs:schema>
*/