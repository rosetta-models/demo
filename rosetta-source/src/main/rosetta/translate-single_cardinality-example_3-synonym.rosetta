namespace demo.translate.single_cardinality.example_3
version "${project.version}"

/*
 * Example 3:
 * Map xml elements with 2 attributes using value syntax
 * The attribute EngineSpecification->fuel->fuelType is mapped from xml path engineType->engineDetail->combustible:
 * -fuelType is mapped using only value "combustible" and since engineDetail node was consumed in Fuel
 * The attribute EngineSpecification->volumeUnit is mapped from xml path engineType->combustible->capacityUnit:
 * -volumeUnit is mapped using path "engineDetail" since its upper xml node combustible node has not been consumed yet and
 * needs to be in order to map it from capacityUnit at that level
 */
synonym source SINGLE_CARDINALITY_EXAMPLE_3

type Root:
    [rootType]
    engineSpecification EngineSpecification (1..1)
        [synonym SINGLE_CARDINALITY_EXAMPLE_3 value "engineType"]

type EngineSpecification:
    fuel Fuel (1..1)
        [synonym SINGLE_CARDINALITY_EXAMPLE_3 value "engineDetail"]
    volumeUnit string (1..1)
        [synonym SINGLE_CARDINALITY_EXAMPLE_3 value "capacityUnit" path "engineDetail"]

type Fuel:
    fuelType string (1..1)
        [synonym SINGLE_CARDINALITY_EXAMPLE_3 value "combustible"]
/*
 * Schema:

 * <?xml version="1.0" encoding="UTF-8"?>
 * <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
 *     <xs:element name="dataDocument">
 *         <xs:complexType>
 *             <xs:all>
 *                 <xs:element name="engineType">
 *                     <xs:complexType>
 *                         <xs:all>
 *                             <xs:element name="engineDetail">
 *                                 <xs:complexType>
 *                                     <xs:all>
 *                                         <xs:element name="capacityUnit" type="xs:string"/>
 *                                         <xs:element name="combustible" type="xs:string"/>
 *                                     </xs:all>
 *                                 </xs:complexType>
 *                             </xs:element>
 *                         </xs:all>
 *                     </xs:complexType>
 *                 </xs:element>
 *             </xs:all>
 *         </xs:complexType>
 *     </xs:element>
 * </xs:schema>
 */
