namespace demo.ingest_synonym.multi_cardinality.example_12
version "${project.version}"

/*
Example 12:
Map list of basic types to nested list of complex types (multiple attributes) using hint.
List of fuelDetail and capacityDetail mapped into engineSpecification and engineMetric respectively since values are
consumed and hint only specifies that at below level there is an element, passing through it without consume it.
*/
synonym source MULTI_CARDINALITY_EXAMPLE_12

type Root:
    [rootType]
	engine Engine (1..1)
	    [synonym MULTI_CARDINALITY_EXAMPLE_12 value "engineType"]

type Engine:
	engineSpecification EngineSpecification (0..*)
	    [synonym MULTI_CARDINALITY_EXAMPLE_12 value "fuelDetail"]
	    [synonym MULTI_CARDINALITY_EXAMPLE_12 hint "capacityDetail"]

type EngineSpecification:
    engineMetric EngineMetric (0..*)
        [synonym MULTI_CARDINALITY_EXAMPLE_12 value "capacityDetail"]
        [synonym MULTI_CARDINALITY_EXAMPLE_12 hint "combustible"]

type EngineMetric:
	fuel string (0..1)
	    [synonym MULTI_CARDINALITY_EXAMPLE_12 value "combustible"]
	capacity string (0..1)
	    [synonym MULTI_CARDINALITY_EXAMPLE_12 value "capacity"]

/*
Schema:

<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="dataDocument">
        <xs:complexType>
            <xs:all>
                <xs:element name="engineType">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="fuelDetail" maxOccurs="unbounded">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="combustible" type="xs:string"/>
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
                            <xs:element name="capacityDetail" maxOccurs="unbounded">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="capacity" type="xs:string"/>
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:all>
        </xs:complexType>
    </xs:element>
</xs:schema>
*/