namespace demo.ingest_synonym.single_cardinality.example_4
version "${project.version}"

/*
Example 4:
Map two xml elements on to single nested rosetta type using value syntax
The attribute EngineSpecification->volume->volumeUnit is mapped from xml path engineType->engineDetail->capacityUnit
The attribute EngineSpecification->volume->fuelType is mapped from xml path engineType->engineDetail->combustibleType
*/
synonym source SINGLE_CARDINALITY_EXAMPLE_4

type Root:
    [rootType]
    engineSpecification EngineSpecification (1..1)
        [synonym SINGLE_CARDINALITY_EXAMPLE_4 value "engineType"]

type EngineSpecification:
    volume Volume (1..1)
        [synonym SINGLE_CARDINALITY_EXAMPLE_4 value "engineDetail"]
        [synonym SINGLE_CARDINALITY_EXAMPLE_4 value "combustible"]

type Volume:
    volumeUnit string (1..1)
        [synonym SINGLE_CARDINALITY_EXAMPLE_4 value "capacityUnit"]
    fuelType string (1..1)
        [synonym SINGLE_CARDINALITY_EXAMPLE_4 value "combustibleType"]

/*
Schema:

<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="dataDocument">
        <xs:complexType>
            <xs:all>
                <xs:element name="engineType">
                    <xs:complexType>
                        <xs:all>
                            <xs:element name="engineDetail">
                                <xs:complexType>
                                    <xs:all>
                                        <xs:element name="capacityUnit" type="xs:string"/>
                                    </xs:all>
                                </xs:complexType>
                            </xs:element>
                            <xs:element name="combustible">
                                <xs:complexType>
                                    <xs:all>
                                        <xs:element name="combustibleType" type="xs:string"/>
                                    </xs:all>
                                </xs:complexType>
                            </xs:element>
                        </xs:all>
                    </xs:complexType>
                </xs:element>
            </xs:all>
        </xs:complexType>
    </xs:element>
</xs:schema>
*/