namespace demo.translate.conditional_set.example_5
version "${project.version}"

/*
Example 5:
 tes 
Two conditional mapping synonyms on a single attribute, each using "set" with a "when" clause that is predicated on the
value of a xml element at the specified xml path.

The attribute EngineSpecification->alternativeFuelType is conditionally set from:

- xml path engine->engineType->engineDetail->complementaryEnergy when the value at xml path engine->engineType->
  engineDetail->energyCategory is "HYBRID"
- xml path engine->engineType->engineDetail->combustible when the value at xml path engine->engineType->engineDetail->
  energyCategory is "HYDROCARBON"
*/
synonym source CONDITIONAL_SET_EXAMPLE_5

type Root:
    [rootType]
	engineSpecification EngineSpecification (1..1)
	    [synonym CONDITIONAL_SET_EXAMPLE_5 value "engine"]

type EngineSpecification:
	fuelType string (1..1)
	    [synonym CONDITIONAL_SET_EXAMPLE_5 value "energyCategory" path "engineType->engineDetail"]
	alternativeFuelType string (0..1)
	    [synonym CONDITIONAL_SET_EXAMPLE_5 value "complementaryEnergy" path "engineType->engineDetail" set when "engineType->engineDetail->engineCategory" = "Hybrid"]
        [synonym CONDITIONAL_SET_EXAMPLE_5 value "combustible" path "engineType->engineDetail" set when "engineType->engineDetail->engineCategory" = "HYDROCARBON"]

/*
Schema:

<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="dataDocument">
        <xs:complexType>
            <xs:all>
                <xs:element name="engine">
                    <xs:complexType>
                        <xs:all>
                            <xs:element name="engineType">
                                <xs:complexType>
                                    <xs:all>
                                        <xs:element name="engineDetail">
                                            <xs:complexType>
                                                <xs:all>
                                                    <xs:element name="engineCategory" type="xs:string" minOccurs="0"/>
                                                    <xs:element name="complementaryEnergy" type="xs:string"
                                                                minOccurs="0"/>
                                                    <xs:element name="combustible" type="xs:string" minOccurs="0"/>
                                                </xs:all>
                                            </xs:complexType>
                                        </xs:element>
                                    </xs:all>
                                </xs:complexType>
                            </xs:element>
                        </xs:all>
                    </xs:complexType>
                </xs:element>
            </xs:all>
        </xs:complexType>
    </xs:element>
</xs:schema>
*/